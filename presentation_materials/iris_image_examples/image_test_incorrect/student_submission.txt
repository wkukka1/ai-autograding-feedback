Markdown Cell:
# Iris Assignment

## Introduction

In this assignment we explore: 
- linear regression
- visualizing distributions

Markdown Cell:
## Setup

Code Cell:
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.datasets import load_iris

iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)

# Create a binary target variable by selecting only two species (Setosa and Versicolor)
df['species'] = iris.target
# df = df[df['species'] != 2]  # Remove the Virginica species (category 2)
# df['species'] = df['species'].apply(lambda x: 1 if x == 1 else 0)  # Setosa = 0, Versicolor = 1

# Font size change for demo visuals
import matplotlib as mpl
mpl.rcParams['font.size']=14

Markdown Cell:
## Task 4
a) The numerical `species` values are not informative unless the viewer knows which species name each value represents. Recode `species` by adding a column called `species name` with the species names from in `iris.target_names`.

Code Cell:
df['species name'] = iris.target_names[df['species']]

Markdown Cell:
b) Use `df_labelled` to create four side-by-side boxplots of sepal lengths, sepal widths, petal lengths, and petal widths (in cm) for each species. Use `species name` to create the boxplot, so that the ticks on horizontal axes of the boxplot are informative. Store this boxplot in a variable called `boxplots_labelled`.

Code Cell:
boxplots_labelled = df.boxplot(
    column=[
        'sepal length (cm)',
        'sepal width (cm)',
        'petal length (cm)',
        'petal width (cm)'],
    by='species',
    figsize=(10, 10)
)

